#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ RAG Crawl Development Environment"
echo "=========================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–º–∞–Ω–¥—ã
check_status() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
    else
        echo -e "${RED}‚ùå $1${NC}"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ Docker
if ! docker info > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
mkdir -p logs

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    echo -e "\n${YELLOW}‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...${NC}"
    # –£–±–∏–≤–∞–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    pkill -P $$
    echo -e "${GREEN}‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    echo -e "${YELLOW}‚ÑπÔ∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
    echo -e "   docker-compose down"
    exit 0
}

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
trap cleanup SIGINT SIGTERM

echo -e "${BLUE}üì¶ –ó–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
docker-compose up -d postgres qdrant
check_status "Docker —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"

echo -e "${BLUE}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
sleep 10

echo -e "${BLUE}üóÑÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î...${NC}"
poetry run alembic upgrade head
check_status "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"

echo -e "${BLUE}üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
cd frontend && npm install
check_status "Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

cd ..

echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...${NC}"

# –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
echo -e "${BLUE}üî• –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞...${NC}"
poetry run uvicorn rag_crawl.main:app --host 0.0.0.0 --port 8000 --reload > logs/backend.log 2>&1 &
BACKEND_PID=$!

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
sleep 3
if ps -p $BACKEND_PID > /dev/null; then
    echo -e "${GREEN}‚úÖ –ë—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: $BACKEND_PID)${NC}"
else
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±—ç–∫–µ–Ω–¥. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ logs/backend.log${NC}"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
echo -e "${BLUE}üî• –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...${NC}"
cd frontend && npm run dev > ../logs/frontend.log 2>&1 &
FRONTEND_PID=$!

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
sleep 5
if ps -p $FRONTEND_PID > /dev/null; then
    echo -e "${GREEN}‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: $FRONTEND_PID)${NC}"
else
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ logs/frontend.log${NC}"
    exit 1
fi

cd ..

echo -e "${GREEN}üéâ –°—Ä–µ–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!${NC}"
echo -e "${BLUE}üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:${NC}"
echo -e "   ‚Ä¢ Backend API: http://localhost:8000"
echo -e "   ‚Ä¢ API Docs: http://localhost:8000/docs"
echo -e "   ‚Ä¢ Frontend: http://localhost:3000"
echo ""
echo -e "${YELLOW}üìä –õ–æ–≥–∏:${NC}"
echo -e "   ‚Ä¢ –ë—ç–∫–µ–Ω–¥: logs/backend.log"
echo -e "   ‚Ä¢ –§—Ä–æ–Ω—Ç–µ–Ω–¥: logs/frontend.log"
echo -e "   ‚Ä¢ Docker: docker-compose logs -f"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C${NC}"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)
echo -e "${BLUE}üìã –í—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –±—ç–∫–µ–Ω–¥–∞:${NC}"
tail -f logs/backend.log 