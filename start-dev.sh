#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ RAG Crawl Development Environment"
echo "=========================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–º–∞–Ω–¥—ã
check_status() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
    else
        echo -e "${RED}‚ùå $1${NC}"
        exit 1
    fi
}

echo -e "${BLUE}üì¶ –ó–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
docker-compose up -d postgres qdrant
check_status "Docker —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"

echo -e "${BLUE}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
sleep 10

echo -e "${BLUE}üóÑÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î...${NC}"
poetry run alembic upgrade head
check_status "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"

echo -e "${BLUE}üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
cd frontend && npm install
check_status "Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

cd ..

echo -e "${GREEN}üéâ –ì–æ—Ç–æ–≤–æ! –ó–∞–ø—É—Å–∫–∞–π—Ç–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
echo ""
echo -e "${YELLOW}Backend API:${NC}"
echo "  poetry run python -m rag_crawl.main"
echo "  –î–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000"
echo "  API docs: http://localhost:8000/docs"
echo ""
echo -e "${YELLOW}Frontend:${NC}"
echo "  cd frontend && npm run dev"
echo "  –î–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:3000"
echo ""
echo -e "${YELLOW}–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
echo "  docker-compose down"
echo "" 