name: Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: crawl4aiacr6c07cdcc.azurecr.io
  RESOURCE_GROUP: davai_poigraem
  CONTAINER_APP_NAME: rag-crawl-app
  CONTAINER_APP_ENVIRONMENT: crawl4ai-env

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Build and push Frontend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: deployment/dockerfiles/frontend.Dockerfile
        push: true
        tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/rag-crawl-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Backend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: deployment/dockerfiles/backend.Dockerfile
        push: true
        tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/rag-crawl-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Nginx image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: deployment/dockerfiles/nginx.Dockerfile
        push: true
        tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/rag-crawl-nginx:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure Container Apps
      run: |
        # Создаем или обновляем Container App
        az containerapp create \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --environment ${{ env.CONTAINER_APP_ENVIRONMENT }} \
          --image ${{ env.AZURE_CONTAINER_REGISTRY }}/rag-crawl-nginx:${{ github.sha }} \
          --registry-server ${{ env.AZURE_CONTAINER_REGISTRY }} \
          --registry-username ${{ secrets.REGISTRY_USERNAME }} \
          --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
          --secrets \
            postgres-password=${{ secrets.POSTGRES_PASSWORD }} \
            azure-openai-api-key=${{ secrets.AZURE_OPENAI_API_KEY }} \
            azure-openai-endpoint=${{ secrets.AZURE_OPENAI_ENDPOINT }} \
            azure-openai-chat-deployment=${{ secrets.AZURE_OPENAI_CHAT_DEPLOYMENT }} \
            azure-openai-embedding-deployment=${{ secrets.AZURE_OPENAI_EMBEDDING_DEPLOYMENT }} \
            azure-openai-chat-model=${{ secrets.AZURE_OPENAI_CHAT_MODEL }} \
            azure-openai-embedding-model=${{ secrets.AZURE_OPENAI_EMBEDDING_MODEL }} \
            azure-openai-api-version=${{ secrets.AZURE_OPENAI_API_VERSION }} \
          --env-vars \
            POSTGRES_PASSWORD=secretref:postgres-password \
            AZURE_OPENAI_API_KEY=secretref:azure-openai-api-key \
            AZURE_OPENAI_ENDPOINT=secretref:azure-openai-endpoint \
            AZURE_OPENAI_CHAT_DEPLOYMENT=secretref:azure-openai-chat-deployment \
            AZURE_OPENAI_EMBEDDING_DEPLOYMENT=secretref:azure-openai-embedding-deployment \
            AZURE_OPENAI_CHAT_MODEL=secretref:azure-openai-chat-model \
            AZURE_OPENAI_EMBEDDING_MODEL=secretref:azure-openai-embedding-model \
            AZURE_OPENAI_API_VERSION=secretref:azure-openai-api-version \
          --target-port 80 \
          --ingress external \
          --cpu 1.0 \
          --memory 2.0Gi \
          --min-replicas 0 \
          --max-replicas 3 \
          --scale-rule-name http-scale-rule \
          --scale-rule-type http \
          --scale-rule-metadata concurrentRequests=10 \
          --query properties.configuration.ingress.fqdn \
          --output tsv || \
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.AZURE_CONTAINER_REGISTRY }}/rag-crawl-nginx:${{ github.sha }} 